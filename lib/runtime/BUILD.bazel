cc_library(
    name = "runtime",
    srcs = [
        "source/Memory/BumpAllocator.c",
        "source/Memory/Common.c",
        "source/Memory/SlabAllocator.c",
        "source/Memory/SlabAllocatorUtilities.c",
        "source/Memory/SlabAllocatorUtilities.h",
    ],
    hdrs = [
        "include/RuntimeLib.h",
        "include/RuntimeLib/Error.h",
        "include/RuntimeLib/GUID.h",
        "include/RuntimeLib/Memory.h",
        "include/RuntimeLib/Memory/BumpAllocator.h",
        "include/RuntimeLib/Memory/SlabAllocator.h",
        "include/RuntimeLib/TypeDefs.h",
    ],
    strip_include_prefix = "include",
    target_compatible_with = select({
        "@platforms//os:linux": [],
        "@platforms//os:macos": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
)

cc_test(
    name = "common_test",
    # This is a core library, it must be small and fast.
    size = "small",
    timeout = "short",
    srcs = [
        "tests/GUID.cpp",
        "tests/Memory.cpp",
        "tests/TypeDefs.cpp",
    ],
    linkstatic = True,
    deps = [
        ":runtime",
        "@catch2//:catch2_main",
    ],
)

cc_test(
    name = "allocator_test",
    # This is a core library, it must be small and fast.
    size = "small",
    timeout = "short",
    srcs = [
        "source/Memory/SlabAllocatorUtilities.h",
        "tests/Allocators/BumpAllocator.cpp",
        "tests/Allocators/SlabAllocatorUtilities.cpp",
    ],
    linkstatic = True,
    deps = [
        ":runtime",
        "@catch2//:catch2_main",
    ],
)
